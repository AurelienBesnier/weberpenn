
# This file has been generated at Wed Jun  4 10:53:19 2008

from openalea.core import *


__name__ = 'demo.weberpenn'

__editable__ = True
__description__ = 'Demonstration of the WeberPenn geometric model.'
__license__ = 'CECILL'
__url__ = ''
__version__ = '0.1.5'
__authors__ = 'Christophe Pradal'
__institutes__ = 'CIRAD'
__icon__ = 'icon.png'
 

__all__ = ['demo_grp', 'demo']



demo_grp = CompositeNodeFactory(name='demo_WeberPenn_grp_1', 
                             description='', 
                             category='Unclassified',
                             doc='',
                             inputs=[  {'interface': None, 'name': 'seed(weber and penn)', 'value': None},
   {'interface': None, 'name': 'position(weber and penn)', 'value': None},
   {  'interface': None,
      'name': 'global_params(tree parameters)',
      'value': {  'base_size': 0.29999999999999999,
                  'base_split': 0,
                  'flare': None,
                  'leaf_scale': 0.59999999999999998,
                  'leaf_scale_x': 1.0,
                  'leaves': 0,
                  'lobes': None,
                  'lobes_variance': None,
                  'order': 3,
                  'ratio': 0.02,
                  'ratio_power': 0.80000000000000004,
                  'scale': 20.0,
                  'scale_variance': 2.0,
                  'shape_id': 0}},
   {  'interface': None,
      'name': 'order0(tree parameters)',
      'value': {  'branches': 20,
                  'curve': 20.0,
                  'curve_back': -20.0,
                  'curve_res': 5,
                  'curve_variance': 0.0,
                  'down_angle': 30.0,
                  'down_angle_variance': 0.0,
                  'length': 1.0,
                  'length_variance': 0.0,
                  'rotate': 137.0,
                  'rotate_variance': 0.0,
                  'seg_split': 0.0,
                  'split_angle': 0.0,
                  'split_angle_variance': 0.0}},
   {  'interface': None,
      'name': 'order1(tree parameters)',
      'value': {  'branches': 10,
                  'curve': 30.0,
                  'curve_back': -40.0,
                  'curve_res': 5,
                  'curve_variance': 30.0,
                  'down_angle': 80.0,
                  'down_angle_variance': 0.0,
                  'length': 0.40000000000000002,
                  'length_variance': 0.0,
                  'rotate': 130.0,
                  'rotate_variance': 0.0,
                  'seg_split': 0.0,
                  'split_angle': 0.0,
                  'split_angle_variance': 0.0}},
   {  'interface': None,
      'name': 'order2(tree parameters)',
      'value': {  'branches': 10,
                  'curve': 20.0,
                  'curve_back': -20.0,
                  'curve_res': 5,
                  'curve_variance': -40.0,
                  'down_angle': 40.0,
                  'down_angle_variance': 0.0,
                  'length': 0.5,
                  'length_variance': 0.0,
                  'rotate': 90.0,
                  'rotate_variance': 0.0,
                  'seg_split': 0.0,
                  'split_angle': 0.0,
                  'split_angle_variance': 0.0}},
   {  'interface': None,
      'name': 'order3(tree parameters)',
      'value': {  'branches': 10,
                  'curve': 20.0,
                  'curve_back': -20.0,
                  'curve_res': 5,
                  'curve_variance': -40.0,
                  'down_angle': 40.0,
                  'down_angle_variance': 0.0,
                  'length': 0.5,
                  'length_variance': 0.0,
                  'rotate': 90.0,
                  'rotate_variance': 0.0,
                  'seg_split': 0.0,
                  'split_angle': 0.0,
                  'split_angle_variance': 0.0}}],
                             outputs=[{'interface': None, 'name': 'out(weber and penn)'}],
                             elt_factory={8: ('WeberPenn', 'tree parameters'), 10: ('WeberPenn', 'weber and penn')},
                             elt_connections={  135720764: (8, 0, 10, 0),
   197763996: ('__in__', 1, 10, 2),
   197928316: ('__in__', 0, 10, 1),
   202166356: ('__in__', 3, 8, 1),
   202167756: ('__in__', 6, 8, 4),
   202167956: ('__in__', 5, 8, 3),
   202168116: (10, 0, '__out__', 0),
   202168676: ('__in__', 2, 8, 0),
   202169476: ('__in__', 4, 8, 2)},
                             elt_data={  8: {  'caption': 'tree parameters',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 408.75,
         'posy': 283.75,
         'priority': 0,
         'user_application': None},
   10: {  'caption': 'weber and penn',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set([]),
          'posx': 396.25,
          'posy': 368.75,
          'priority': 0,
          'user_application': None}},
                             elt_value={8: [], 10: [(1, 'None'), (2, 'None')]},
                             lazy=True,
                             )




demo = CompositeNodeFactory(name='demo_WeberPenn', 
                             description='Weber and Penn model for tree generation', 
                             category='Simulation',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('PlantGL.Visualization', 'plot3D'),
   3: ('System', 'annotation'),
   4: ('WeberPenn', 'weber and penn'),
   5: ('WeberPenn', 'order parameters'),
   6: ('WeberPenn', 'species'),
   7: ('WeberPenn', 'order parameters'),
   8: ('WeberPenn', 'tree parameters'),
   9: ('WeberPenn', 'global parameters'),
   10: ('WeberPenn', 'weber and penn'),
   11: ('WeberPenn', 'order parameters'),
   12: ('PlantGL.Visualization', 'plot3D'),
   13: ('Catalog.Data', 'int'),
   14: ('System', 'annotation'),
   15: ('System', 'annotation'),
   16: ('System', 'annotation')},
                             elt_connections={  9789640: (11, 0, 8, 2),
   9789652: (8, 0, 10, 0),
   9789664: (4, 0, 2, 0),
   9789676: (7, 0, 8, 1),
   9789688: (5, 0, 8, 3),
   9789700: (10, 0, 12, 0),
   9789712: (9, 0, 8, 0),
   9789724: (13, 0, 4, 1),
   9789736: (5, 0, 8, 4),
   9789748: (6, 0, 4, 0)},
                             elt_data={  2: {  'caption': 'plot3D',
         'hide': True,
         'lazy': False,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 606.4814814814813,
         'posy': 424.38271604938274,
         'priority': 0},
   3: {  'posx': 38.75,
         'posy': 238.75,
         'txt': 'Geometric parameters:\n  * length of axes\n  * curvature\n  * phyllotaxis\n  * insertion angle\n\nTopologic parameters:\n  * number of branches'},
   4: {  'caption': 'weber and penn',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 571.25,
         'posy': 353.75,
         'priority': 0},
   5: {  'caption': 'order2',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([8, 6, 7]),
         'posx': 408.75,
         'posy': 168.75,
         'priority': 0},
   6: {  'caption': 'species',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 708.75,
         'posy': 142.5,
         'priority': 0},
   7: {  'caption': 'trunk',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([4, 6, 7, 8, 10, 12]),
         'posx': 173.75,
         'posy': 170.0,
         'priority': 0},
   8: {  'caption': 'tree parameters',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 408.75,
         'posy': 283.75,
         'priority': 0},
   9: {  'caption': 'global parameters',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': -2.5,
         'posy': 123.75,
         'priority': 0},
   10: {  'caption': 'weber and penn',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set([]),
          'posx': 396.25,
          'posy': 368.75,
          'priority': 0},
   11: {  'caption': 'order1',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set([8, 6, 7]),
          'posx': 258.75,
          'posy': 92.5,
          'priority': 0},
   12: {  'caption': 'plot3D',
          'hide': True,
          'lazy': False,
          'minimal': False,
          'port_hide_changed': set([]),
          'posx': 428.40343855358691,
          'posy': 430.02617885113847,
          'priority': 0},
   13: {  'caption': '99',
          'hide': True,
          'lazy': True,
          'minimal': False,
          'port_hide_changed': set([]),
          'posx': 738.75,
          'posy': 315.0,
          'priority': 0},
   14: {  'posx': 636.25,
          'posy': 93.75,
          'txt': 'Predefined parameters for specific species'},
   15: {  'posx': 613.75,
          'posy': -22.5,
          'txt': 'Plant simulation with weber & penn method'},
   16: {'posx': 616.25, 'posy': 11.25, 'txt': 'Author : Christophe Pradal'},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set([]),
                'posx': 20.0,
                'posy': 5.0,
                'priority': 0},
   '__out__': {  'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'minimal': False,
                 'port_hide_changed': set([]),
                 'posx': 20.0,
                 'posy': 250.0,
                 'priority': 0}},
                             elt_value={  2: [],
   3: [],
   4: [(2, 'None')],
   5: [  (0, '0.5'),
         (1, '0.0'),
         (2, '5'),
         (3, '20.0'),
         (4, '-40.0'),
         (5, '-20.0'),
         (6, '0.0'),
         (7, '0.0'),
         (8, '0.0'),
         (9, '40.0'),
         (10, '0.0'),
         (11, '90.0'),
         (12, '0.0'),
         (13, '10')],
   6: [(0, "'Black Tupelo'")],
   7: [  (0, '1.0'),
         (1, '0.0'),
         (2, '5'),
         (3, '20.0'),
         (4, '0.0'),
         (5, '-20.0'),
         (6, '0.0'),
         (7, '0.0'),
         (8, '0.0'),
         (9, '30.0'),
         (10, '0.0'),
         (11, '137.0'),
         (12, '0.0'),
         (13, '20')],
   8: [],
   9: [  (0, "'0 - Conical'"),
         (1, '0.29999999999999999'),
         (2, '20.0'),
         (3, '2.0'),
         (4, '3'),
         (5, '0.02'),
         (6, '0.80000000000000004'),
         (7, '0'),
         (8, '0.59999999999999998'),
         (9, '1.0'),
         (10, 'None'),
         (11, 'None'),
         (12, 'None'),
         (13, '0')],
   10: [(1, 'None'), (2, 'None')],
   11: [  (0, '0.40000000000000002'),
          (1, '0.0'),
          (2, '5'),
          (3, '30.0'),
          (4, '30.0'),
          (5, '-40.0'),
          (6, '0.0'),
          (7, '0.0'),
          (8, '0.0'),
          (9, '80.0'),
          (10, '0.0'),
          (11, '130.0'),
          (12, '0.0'),
          (13, '10')],
   12: [],
   13: [(0, '99')],
   14: [],
   15: [],
   16: [],
   '__in__': [],
   '__out__': []},
                             lazy=True,
                             )




